name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  unit-tests:
    name: Unit & Integration Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests with coverage
        run: npm run test:ci
      
      - name: Check coverage file exists
        run: |
          if [ -f "./coverage/lcov.info" ]; then
            echo "Coverage file found"
            ls -lh ./coverage/lcov.info
          else
            echo "Warning: Coverage file not found"
            ls -la ./coverage/ || echo "Coverage directory not found"
          fi
      
      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: always()
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage
          fail_ci_if_error: false
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-avanta-finance
          verbose: true
        continue-on-error: true
      
      - name: Archive coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30

  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium
      
      - name: Build application
        run: npm run build
      
      - name: Run E2E tests
        run: npm run test:e2e -- --project=chromium
        env:
          CI: true
        continue-on-error: true
      
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: tests/e2e/playwright-report/
          retention-days: 30
        continue-on-error: true
      
      - name: Upload test videos
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-videos
          path: tests/e2e/test-results/
          retention-days: 7
        continue-on-error: true

  security-scan:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run npm audit
        run: npm audit --audit-level=moderate
        continue-on-error: true
      
      - name: Check for vulnerabilities
        run: |
          echo "Checking for security vulnerabilities..."
          npm audit --json > audit-results.json || true
          cat audit-results.json
      
      - name: Upload security scan results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-scan
          path: audit-results.json
          retention-days: 30

  lint-check:
    name: Linting & Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Check code formatting
        run: |
          echo "Code formatting check would run here"
          echo "Currently skipped as no linter is configured"
        continue-on-error: true

  build-check:
    name: Build Verification
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build application
        run: npm run build
      
      - name: Check build size
        run: |
          echo "Build completed successfully"
          du -sh dist/
          echo "Main bundle sizes:"
          find dist/assets -name "*.js" -type f -exec ls -lh {} \; | awk '{print $9, $5}'

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [unit-tests, e2e-tests, security-scan, lint-check, build-check]
    if: always()
    
    steps:
      - name: Check test results
        run: |
          echo "Test suite execution completed"
          echo "Unit Tests: ${{ needs.unit-tests.result }}"
          echo "E2E Tests: ${{ needs.e2e-tests.result }}"
          echo "Security Scan: ${{ needs.security-scan.result }}"
          echo "Lint Check: ${{ needs.lint-check.result }}"
          echo "Build Check: ${{ needs.build-check.result }}"
      
      - name: Fail if critical tests failed
        if: |
          needs.unit-tests.result == 'failure' ||
          needs.e2e-tests.result == 'failure' ||
          needs.build-check.result == 'failure'
        run: |
          echo "Critical tests failed"
          exit 1
