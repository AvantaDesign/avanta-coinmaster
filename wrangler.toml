# ============================================================================
# Cloudflare Workers Configuration for Avanta Finance
# ============================================================================
# 
# This configuration file defines the settings for deploying Avanta Finance
# to Cloudflare Pages with Workers Functions, D1 Database, and R2 Storage.
#
# Documentation: https://developers.cloudflare.com/workers/wrangler/configuration/
#
# ============================================================================

# Application name (must be unique across Cloudflare)
name = "avanta-coinmaster"

# Compatibility date determines which Cloudflare Workers runtime features are available
# Format: YYYY-MM-DD
# See: https://developers.cloudflare.com/workers/platform/compatibility-dates/
compatibility_date = "2024-01-01"

# ============================================================================
# CLOUDFLARE PAGES CONFIGURATION
# ============================================================================

# Directory containing the built static assets
# This is where Vite outputs the production build
pages_build_output_dir = "dist"

# ============================================================================
# D1 DATABASE BINDING (SQLite at the Edge)
# ============================================================================
# 
# D1 is Cloudflare's distributed SQLite database running at the edge.
# It provides low-latency SQL database access from Workers.
#
# Setup Instructions:
# 1. Create the database:
#    wrangler d1 create avanta-coinmaster
# 
# 2. Copy the database_id from the output and replace the placeholder below
#
# 3. Run migrations to create tables:
#    wrangler d1 execute avanta-coinmaster --file=schema.sql
#
# 4. (Optional) Load seed data:
#    wrangler d1 execute avanta-coinmaster --file=seed.sql
#
# Local Development:
#   wrangler pages dev dist --d1 DB=avanta-coinmaster
#
# Database Operations:
#   List databases:     wrangler d1 list
#   Query database:     wrangler d1 execute avanta-coinmaster --command="SELECT * FROM transactions LIMIT 5"
#   Backup database:    wrangler d1 export avanta-coinmaster --output=backup.sql
#
# Free Tier Limits:
#   - Storage: 5 GB
#   - Reads: 5 million per day
#   - Writes: 100,000 per day
#
# ============================================================================

# D1 Database binding for local development
[[d1_databases]]
binding = "DB"
database_name = "avanta-coinmaster"
database_id = "04aff2ec-b447-4af7-ae5d-0363bf6c8e49"

# ============================================================================
# R2 STORAGE BINDING (S3-Compatible Object Storage)
# ============================================================================
#
# R2 is Cloudflare's object storage service for files, images, and documents.
# It's S3-compatible with zero egress fees.
#
# Setup Instructions:
# 1. Create the R2 bucket:
#    wrangler r2 bucket create avanta-receipts
#
# 2. The bucket will be automatically bound based on the configuration below
#
# Local Development:
#   wrangler pages dev dist --r2 RECEIPTS=avanta-receipts
#
# R2 Operations:
#   List buckets:       wrangler r2 bucket list
#   List objects:       wrangler r2 object list avanta-receipts
#   Delete bucket:      wrangler r2 bucket delete avanta-receipts
#
# Free Tier Limits:
#   - Storage: 10 GB
#   - Class A Operations: 1 million per month (writes)
#   - Class B Operations: 10 million per month (reads)
#   - Egress: FREE (no data transfer fees)
#
# ============================================================================

# R2 Bucket binding moved to [env.production] section below

# ============================================================================
# ENVIRONMENT VARIABLES
# ============================================================================
#
# These variables are accessible in Workers code via env.VARIABLE_NAME
# They can be overridden per environment (production, preview)
#
# ============================================================================

[vars]
# Environment identifier
ENVIRONMENT = "production"

# Application version (update with each deployment)
APP_VERSION = "1.0.0"

# API Configuration
API_TIMEOUT_MS = "30000"

# Feature flags (can be toggled without code changes)
ENABLE_DEBUG_LOGS = "false"
ENABLE_RATE_LIMITING = "false"
ENABLE_ANALYTICS = "true"

# Database Configuration
DB_QUERY_TIMEOUT_MS = "5000"
DB_MAX_RETRIES = "3"

# File Upload Configuration
MAX_FILE_SIZE_MB = "10"
ALLOWED_FILE_TYPES = "image/jpeg,image/png,image/gif,application/pdf,text/xml"

# Fiscal Configuration (Mexican Tax System)
ISR_RATE = "0.20"  # 20% ISR rate (simplified)
IVA_RATE = "0.16"  # 16% IVA rate

# n8n Webhook Configuration
# N8N_WEBHOOK_CLASSIFY = "https://n8n.your-domain.com/webhook/classify"
# N8N_WEBHOOK_IMPORT = "https://n8n.your-domain.com/webhook/import"
# N8N_NOTIFICATION_WEBHOOK = "https://n8n.your-domain.com/webhook/notify"
# N8N_REMINDER_WEBHOOK = "https://n8n.your-domain.com/webhook/reminder"
# ERROR_ALERT_WEBHOOK = "https://n8n.your-domain.com/webhook/alert"

# Note: Use wrangler secret for sensitive values:
# wrangler secret put N8N_WEBHOOK_SECRET

# ============================================================================
# PREVIEW ENVIRONMENT VARIABLES (for staging/testing)
# ============================================================================
# 
# These override the main [vars] when deploying to preview branches
#
# ============================================================================

[env.preview.vars]
ENVIRONMENT = "preview"
ENABLE_DEBUG_LOGS = "true"
ENABLE_RATE_LIMITING = "false"
APP_VERSION = "1.0.0"
API_TIMEOUT_MS = "30000"
ENABLE_ANALYTICS = "false"
DB_QUERY_TIMEOUT_MS = "5000"
DB_MAX_RETRIES = "3"
MAX_FILE_SIZE_MB = "10"
ALLOWED_FILE_TYPES = "image/jpeg,image/png,image/gif,application/pdf,text/xml"
ISR_RATE = "0.20"
IVA_RATE = "0.16"

# ============================================================================
# CRITICAL: PREVIEW ENVIRONMENT DATABASE ISOLATION
# ============================================================================
# 
# PHASE 30 REQUIREMENT: Preview must use a SEPARATE database from production
# to prevent cross-environment data contamination.
#
# CURRENT STATUS: Temporarily using production database for preview.
# This is NOT IDEAL but allows deployments to work.
#
# SETUP INSTRUCTIONS FOR DEDICATED PREVIEW DATABASE:
# 1. Create a new D1 database exclusively for preview:
#    wrangler d1 create avanta-coinmaster-preview
#
# 2. Copy the database_id from the command output
#
# 3. Replace the database_id below with the new preview database ID
#
# 4. Run migrations on the preview database:
#    wrangler d1 execute avanta-coinmaster-preview --file=schema.sql
#    wrangler d1 execute avanta-coinmaster-preview --file=migrations/*.sql
#
# 5. (Optional) Seed the preview database with test data:
#    wrangler d1 execute avanta-coinmaster-preview --file=seed.sql
#
# VERIFICATION:
# - Confirm preview deployments write to the preview database only
# - Verify production database is never accessed from preview environment
# - Test that preview can be reset without affecting production
#
# ============================================================================

# D1 Database binding for preview environment
# TODO: Replace with actual preview database ID after creation
# TEMPORARY: Using production database until preview database is created
[[env.preview.d1_databases]]
binding = "DB"
database_name = "avanta-coinmaster"  # Will be: avanta-coinmaster-preview
database_id = "04aff2ec-b447-4af7-ae5d-0363bf6c8e49"  # TEMPORARY: Using production DB

# ============================================================================
# PRODUCTION ENVIRONMENT (explicit configuration)
# ============================================================================

[env.production.vars]
ENVIRONMENT = "production"
ENABLE_DEBUG_LOGS = "false"
ENABLE_RATE_LIMITING = "true"
ENABLE_ANALYTICS = "true"
APP_VERSION = "1.0.0"
API_TIMEOUT_MS = "30000"
DB_QUERY_TIMEOUT_MS = "10000"
DB_MAX_RETRIES = "3"
MAX_FILE_SIZE_MB = "10"
ALLOWED_FILE_TYPES = "pdf,jpg,jpeg,png,xml,csv"
ISR_RATE = "0.20"
IVA_RATE = "0.16"

# D1 Database binding for production
[[env.production.d1_databases]]
binding = "DB"
database_name = "avanta-coinmaster"
database_id = "04aff2ec-b447-4af7-ae5d-0363bf6c8e49"

# R2 Bucket binding for production
[[env.production.r2_buckets]]
binding = "RECEIPTS"
bucket_name = "avanta-receipts"

# ============================================================================
# WORKERS FUNCTIONS CONFIGURATION
# ============================================================================
#
# Configuration for Cloudflare Pages Functions (Workers)
# Functions are automatically deployed from the /functions directory
#
# Routes:
#   /api/dashboard        - GET: Financial dashboard summary
#   /api/transactions     - GET, POST: List/Create transactions
#   /api/transactions/:id - GET, PUT, DELETE: Single transaction operations
#   /api/accounts         - GET: List accounts
#   /api/accounts/:id     - PUT: Update account balance
#   /api/fiscal           - GET: Tax calculations (ISR, IVA)
#   /api/invoices         - GET, POST: CFDI invoice management
#   /api/upload           - POST: File upload to R2
#
# ============================================================================

# ============================================================================
# ADVANCED CONFIGURATION (Optional)
# ============================================================================

# Limits and Performance
# [limits]
# CPU time limit per request (in milliseconds, max 30000 for Bundled)
# cpu_ms = 50

# Observability Configuration
# [observability]
# enabled = true
# head_sampling_rate = 1

# Custom Routes (if needed)
# [[routes]]
# pattern = "/api/*"
# custom_domain = true

# ============================================================================
# DEPLOYMENT INSTRUCTIONS
# ============================================================================
#
# Local Development:
#   1. Install dependencies:         npm install
#   2. Build the application:        npm run build
#   3. Start dev server:             npm run dev
#   4. Preview with Workers:         npx wrangler pages dev dist
#
# Production Deployment:
#   1. Login to Cloudflare:          wrangler login
#   2. Create D1 database:           wrangler d1 create avanta-coinmaster
#   3. Update database_id above with the output ID
#   4. Run migrations:               wrangler d1 execute avanta-coinmaster --file=schema.sql
#   5. Create R2 bucket:             wrangler r2 bucket create avanta-receipts
#   6. Build application:            npm run build
#   7. Deploy to Pages:              wrangler pages deploy dist
#   8. Configure bindings in Dashboard (if not auto-configured)
#
# Continuous Deployment:
#   - Push to main branch triggers automatic deployment via GitHub Actions
#   - See .github/workflows/deploy.yml for CI/CD configuration
#
# Troubleshooting:
#   - List databases:     wrangler d1 list
#   - List buckets:       wrangler r2 bucket list
#   - View logs:          wrangler pages deployment tail
#   - Test query:         wrangler d1 execute avanta-coinmaster --command="SELECT COUNT(*) FROM transactions"
#
# Documentation:
#   - Wrangler:          https://developers.cloudflare.com/workers/wrangler/
#   - D1:                https://developers.cloudflare.com/d1/
#   - R2:                https://developers.cloudflare.com/r2/
#   - Pages Functions:   https://developers.cloudflare.com/pages/functions/
#
# ============================================================================

# ============================================================================
# NOTES
# ============================================================================
#
# 1. Database ID: Must be replaced with actual ID from `wrangler d1 create`
# 2. Bindings: Ensure D1 and R2 bindings are configured in Cloudflare Dashboard
# 3. Secrets: For sensitive data, use `wrangler secret put` instead of vars
# 4. Custom Domain: Configure in Cloudflare Dashboard under Pages settings
# 5. Analytics: Enable in Cloudflare Dashboard for detailed metrics
#
# ============================================================================
